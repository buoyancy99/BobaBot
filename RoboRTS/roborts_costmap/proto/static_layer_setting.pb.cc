// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: static_layer_setting.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "static_layer_setting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roborts_costmap {

namespace {

const ::google::protobuf::Descriptor* ParaStaticLayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParaStaticLayer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_static_5flayer_5fsetting_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_static_5flayer_5fsetting_2eproto() {
  protobuf_AddDesc_static_5flayer_5fsetting_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "static_layer_setting.proto");
  GOOGLE_CHECK(file != NULL);
  ParaStaticLayer_descriptor_ = file->message_type(0);
  static const int ParaStaticLayer_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, first_map_only_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, subscribe_to_updates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, track_unknown_space_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, use_maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, unknown_cost_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, trinary_map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, lethal_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, topic_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, is_raw_rosmessage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, is_debug_),
  };
  ParaStaticLayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ParaStaticLayer_descriptor_,
      ParaStaticLayer::default_instance_,
      ParaStaticLayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, _has_bits_[0]),
      -1,
      -1,
      sizeof(ParaStaticLayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaStaticLayer, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_static_5flayer_5fsetting_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ParaStaticLayer_descriptor_, &ParaStaticLayer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_static_5flayer_5fsetting_2eproto() {
  delete ParaStaticLayer::default_instance_;
  delete ParaStaticLayer_reflection_;
}

void protobuf_AddDesc_static_5flayer_5fsetting_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_static_5flayer_5fsetting_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032static_layer_setting.proto\022\017roborts_co"
    "stmap\"\205\002\n\017ParaStaticLayer\022\026\n\016first_map_o"
    "nly\030\001 \002(\010\022\034\n\024subscribe_to_updates\030\002 \002(\010\022"
    "\033\n\023track_unknown_space\030\003 \002(\010\022\023\n\013use_maxi"
    "mum\030\004 \002(\010\022\032\n\022unknown_cost_value\030\005 \002(\005\022\023\n"
    "\013trinary_map\030\006 \002(\010\022\030\n\020lethal_threshold\030\007"
    " \002(\005\022\022\n\ntopic_name\030\010 \002(\t\022\031\n\021is_raw_rosme"
    "ssage\030\t \002(\010\022\020\n\010is_debug\030\n \002(\010", 309);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "static_layer_setting.proto", &protobuf_RegisterTypes);
  ParaStaticLayer::default_instance_ = new ParaStaticLayer();
  ParaStaticLayer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_static_5flayer_5fsetting_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_static_5flayer_5fsetting_2eproto {
  StaticDescriptorInitializer_static_5flayer_5fsetting_2eproto() {
    protobuf_AddDesc_static_5flayer_5fsetting_2eproto();
  }
} static_descriptor_initializer_static_5flayer_5fsetting_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParaStaticLayer::kFirstMapOnlyFieldNumber;
const int ParaStaticLayer::kSubscribeToUpdatesFieldNumber;
const int ParaStaticLayer::kTrackUnknownSpaceFieldNumber;
const int ParaStaticLayer::kUseMaximumFieldNumber;
const int ParaStaticLayer::kUnknownCostValueFieldNumber;
const int ParaStaticLayer::kTrinaryMapFieldNumber;
const int ParaStaticLayer::kLethalThresholdFieldNumber;
const int ParaStaticLayer::kTopicNameFieldNumber;
const int ParaStaticLayer::kIsRawRosmessageFieldNumber;
const int ParaStaticLayer::kIsDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParaStaticLayer::ParaStaticLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roborts_costmap.ParaStaticLayer)
}

void ParaStaticLayer::InitAsDefaultInstance() {
}

ParaStaticLayer::ParaStaticLayer(const ParaStaticLayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roborts_costmap.ParaStaticLayer)
}

void ParaStaticLayer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  first_map_only_ = false;
  subscribe_to_updates_ = false;
  track_unknown_space_ = false;
  use_maximum_ = false;
  unknown_cost_value_ = 0;
  trinary_map_ = false;
  lethal_threshold_ = 0;
  topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_raw_rosmessage_ = false;
  is_debug_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParaStaticLayer::~ParaStaticLayer() {
  // @@protoc_insertion_point(destructor:roborts_costmap.ParaStaticLayer)
  SharedDtor();
}

void ParaStaticLayer::SharedDtor() {
  topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ParaStaticLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParaStaticLayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParaStaticLayer_descriptor_;
}

const ParaStaticLayer& ParaStaticLayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_static_5flayer_5fsetting_2eproto();
  return *default_instance_;
}

ParaStaticLayer* ParaStaticLayer::default_instance_ = NULL;

ParaStaticLayer* ParaStaticLayer::New(::google::protobuf::Arena* arena) const {
  ParaStaticLayer* n = new ParaStaticLayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParaStaticLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:roborts_costmap.ParaStaticLayer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ParaStaticLayer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ParaStaticLayer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(first_map_only_, unknown_cost_value_);
    ZR_(lethal_threshold_, trinary_map_);
    if (has_topic_name()) {
      topic_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ZR_(is_raw_rosmessage_, is_debug_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ParaStaticLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roborts_costmap.ParaStaticLayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool first_map_only = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_map_only_)));
          set_has_first_map_only();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_subscribe_to_updates;
        break;
      }

      // required bool subscribe_to_updates = 2;
      case 2: {
        if (tag == 16) {
         parse_subscribe_to_updates:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &subscribe_to_updates_)));
          set_has_subscribe_to_updates();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_track_unknown_space;
        break;
      }

      // required bool track_unknown_space = 3;
      case 3: {
        if (tag == 24) {
         parse_track_unknown_space:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &track_unknown_space_)));
          set_has_track_unknown_space();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_use_maximum;
        break;
      }

      // required bool use_maximum = 4;
      case 4: {
        if (tag == 32) {
         parse_use_maximum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_maximum_)));
          set_has_use_maximum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_unknown_cost_value;
        break;
      }

      // required int32 unknown_cost_value = 5;
      case 5: {
        if (tag == 40) {
         parse_unknown_cost_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unknown_cost_value_)));
          set_has_unknown_cost_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_trinary_map;
        break;
      }

      // required bool trinary_map = 6;
      case 6: {
        if (tag == 48) {
         parse_trinary_map:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trinary_map_)));
          set_has_trinary_map();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_lethal_threshold;
        break;
      }

      // required int32 lethal_threshold = 7;
      case 7: {
        if (tag == 56) {
         parse_lethal_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lethal_threshold_)));
          set_has_lethal_threshold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_topic_name;
        break;
      }

      // required string topic_name = 8;
      case 8: {
        if (tag == 66) {
         parse_topic_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->topic_name().data(), this->topic_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roborts_costmap.ParaStaticLayer.topic_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_is_raw_rosmessage;
        break;
      }

      // required bool is_raw_rosmessage = 9;
      case 9: {
        if (tag == 72) {
         parse_is_raw_rosmessage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_raw_rosmessage_)));
          set_has_is_raw_rosmessage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_is_debug;
        break;
      }

      // required bool is_debug = 10;
      case 10: {
        if (tag == 80) {
         parse_is_debug:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_debug_)));
          set_has_is_debug();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roborts_costmap.ParaStaticLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roborts_costmap.ParaStaticLayer)
  return false;
#undef DO_
}

void ParaStaticLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roborts_costmap.ParaStaticLayer)
  // required bool first_map_only = 1;
  if (has_first_map_only()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->first_map_only(), output);
  }

  // required bool subscribe_to_updates = 2;
  if (has_subscribe_to_updates()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->subscribe_to_updates(), output);
  }

  // required bool track_unknown_space = 3;
  if (has_track_unknown_space()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->track_unknown_space(), output);
  }

  // required bool use_maximum = 4;
  if (has_use_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->use_maximum(), output);
  }

  // required int32 unknown_cost_value = 5;
  if (has_unknown_cost_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->unknown_cost_value(), output);
  }

  // required bool trinary_map = 6;
  if (has_trinary_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->trinary_map(), output);
  }

  // required int32 lethal_threshold = 7;
  if (has_lethal_threshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->lethal_threshold(), output);
  }

  // required string topic_name = 8;
  if (has_topic_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->topic_name().data(), this->topic_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaStaticLayer.topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->topic_name(), output);
  }

  // required bool is_raw_rosmessage = 9;
  if (has_is_raw_rosmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_raw_rosmessage(), output);
  }

  // required bool is_debug = 10;
  if (has_is_debug()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_debug(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roborts_costmap.ParaStaticLayer)
}

::google::protobuf::uint8* ParaStaticLayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roborts_costmap.ParaStaticLayer)
  // required bool first_map_only = 1;
  if (has_first_map_only()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->first_map_only(), target);
  }

  // required bool subscribe_to_updates = 2;
  if (has_subscribe_to_updates()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->subscribe_to_updates(), target);
  }

  // required bool track_unknown_space = 3;
  if (has_track_unknown_space()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->track_unknown_space(), target);
  }

  // required bool use_maximum = 4;
  if (has_use_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->use_maximum(), target);
  }

  // required int32 unknown_cost_value = 5;
  if (has_unknown_cost_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->unknown_cost_value(), target);
  }

  // required bool trinary_map = 6;
  if (has_trinary_map()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->trinary_map(), target);
  }

  // required int32 lethal_threshold = 7;
  if (has_lethal_threshold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->lethal_threshold(), target);
  }

  // required string topic_name = 8;
  if (has_topic_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->topic_name().data(), this->topic_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaStaticLayer.topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->topic_name(), target);
  }

  // required bool is_raw_rosmessage = 9;
  if (has_is_raw_rosmessage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_raw_rosmessage(), target);
  }

  // required bool is_debug = 10;
  if (has_is_debug()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_debug(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roborts_costmap.ParaStaticLayer)
  return target;
}

int ParaStaticLayer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roborts_costmap.ParaStaticLayer)
  int total_size = 0;

  if (has_first_map_only()) {
    // required bool first_map_only = 1;
    total_size += 1 + 1;
  }

  if (has_subscribe_to_updates()) {
    // required bool subscribe_to_updates = 2;
    total_size += 1 + 1;
  }

  if (has_track_unknown_space()) {
    // required bool track_unknown_space = 3;
    total_size += 1 + 1;
  }

  if (has_use_maximum()) {
    // required bool use_maximum = 4;
    total_size += 1 + 1;
  }

  if (has_unknown_cost_value()) {
    // required int32 unknown_cost_value = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unknown_cost_value());
  }

  if (has_trinary_map()) {
    // required bool trinary_map = 6;
    total_size += 1 + 1;
  }

  if (has_lethal_threshold()) {
    // required int32 lethal_threshold = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lethal_threshold());
  }

  if (has_topic_name()) {
    // required string topic_name = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic_name());
  }

  if (has_is_raw_rosmessage()) {
    // required bool is_raw_rosmessage = 9;
    total_size += 1 + 1;
  }

  if (has_is_debug()) {
    // required bool is_debug = 10;
    total_size += 1 + 1;
  }

  return total_size;
}
int ParaStaticLayer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:roborts_costmap.ParaStaticLayer)
  int total_size = 0;

  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required bool first_map_only = 1;
    total_size += 1 + 1;

    // required bool subscribe_to_updates = 2;
    total_size += 1 + 1;

    // required bool track_unknown_space = 3;
    total_size += 1 + 1;

    // required bool use_maximum = 4;
    total_size += 1 + 1;

    // required int32 unknown_cost_value = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unknown_cost_value());

    // required bool trinary_map = 6;
    total_size += 1 + 1;

    // required int32 lethal_threshold = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lethal_threshold());

    // required string topic_name = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic_name());

    // required bool is_raw_rosmessage = 9;
    total_size += 1 + 1;

    // required bool is_debug = 10;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParaStaticLayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roborts_costmap.ParaStaticLayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ParaStaticLayer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ParaStaticLayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roborts_costmap.ParaStaticLayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roborts_costmap.ParaStaticLayer)
    MergeFrom(*source);
  }
}

void ParaStaticLayer::MergeFrom(const ParaStaticLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roborts_costmap.ParaStaticLayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_map_only()) {
      set_first_map_only(from.first_map_only());
    }
    if (from.has_subscribe_to_updates()) {
      set_subscribe_to_updates(from.subscribe_to_updates());
    }
    if (from.has_track_unknown_space()) {
      set_track_unknown_space(from.track_unknown_space());
    }
    if (from.has_use_maximum()) {
      set_use_maximum(from.use_maximum());
    }
    if (from.has_unknown_cost_value()) {
      set_unknown_cost_value(from.unknown_cost_value());
    }
    if (from.has_trinary_map()) {
      set_trinary_map(from.trinary_map());
    }
    if (from.has_lethal_threshold()) {
      set_lethal_threshold(from.lethal_threshold());
    }
    if (from.has_topic_name()) {
      set_has_topic_name();
      topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_name_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_is_raw_rosmessage()) {
      set_is_raw_rosmessage(from.is_raw_rosmessage());
    }
    if (from.has_is_debug()) {
      set_is_debug(from.is_debug());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ParaStaticLayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roborts_costmap.ParaStaticLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaStaticLayer::CopyFrom(const ParaStaticLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roborts_costmap.ParaStaticLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaStaticLayer::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;

  return true;
}

void ParaStaticLayer::Swap(ParaStaticLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParaStaticLayer::InternalSwap(ParaStaticLayer* other) {
  std::swap(first_map_only_, other->first_map_only_);
  std::swap(subscribe_to_updates_, other->subscribe_to_updates_);
  std::swap(track_unknown_space_, other->track_unknown_space_);
  std::swap(use_maximum_, other->use_maximum_);
  std::swap(unknown_cost_value_, other->unknown_cost_value_);
  std::swap(trinary_map_, other->trinary_map_);
  std::swap(lethal_threshold_, other->lethal_threshold_);
  topic_name_.Swap(&other->topic_name_);
  std::swap(is_raw_rosmessage_, other->is_raw_rosmessage_);
  std::swap(is_debug_, other->is_debug_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParaStaticLayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParaStaticLayer_descriptor_;
  metadata.reflection = ParaStaticLayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParaStaticLayer

// required bool first_map_only = 1;
bool ParaStaticLayer::has_first_map_only() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParaStaticLayer::set_has_first_map_only() {
  _has_bits_[0] |= 0x00000001u;
}
void ParaStaticLayer::clear_has_first_map_only() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParaStaticLayer::clear_first_map_only() {
  first_map_only_ = false;
  clear_has_first_map_only();
}
 bool ParaStaticLayer::first_map_only() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.first_map_only)
  return first_map_only_;
}
 void ParaStaticLayer::set_first_map_only(bool value) {
  set_has_first_map_only();
  first_map_only_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.first_map_only)
}

// required bool subscribe_to_updates = 2;
bool ParaStaticLayer::has_subscribe_to_updates() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParaStaticLayer::set_has_subscribe_to_updates() {
  _has_bits_[0] |= 0x00000002u;
}
void ParaStaticLayer::clear_has_subscribe_to_updates() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParaStaticLayer::clear_subscribe_to_updates() {
  subscribe_to_updates_ = false;
  clear_has_subscribe_to_updates();
}
 bool ParaStaticLayer::subscribe_to_updates() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.subscribe_to_updates)
  return subscribe_to_updates_;
}
 void ParaStaticLayer::set_subscribe_to_updates(bool value) {
  set_has_subscribe_to_updates();
  subscribe_to_updates_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.subscribe_to_updates)
}

// required bool track_unknown_space = 3;
bool ParaStaticLayer::has_track_unknown_space() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ParaStaticLayer::set_has_track_unknown_space() {
  _has_bits_[0] |= 0x00000004u;
}
void ParaStaticLayer::clear_has_track_unknown_space() {
  _has_bits_[0] &= ~0x00000004u;
}
void ParaStaticLayer::clear_track_unknown_space() {
  track_unknown_space_ = false;
  clear_has_track_unknown_space();
}
 bool ParaStaticLayer::track_unknown_space() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.track_unknown_space)
  return track_unknown_space_;
}
 void ParaStaticLayer::set_track_unknown_space(bool value) {
  set_has_track_unknown_space();
  track_unknown_space_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.track_unknown_space)
}

// required bool use_maximum = 4;
bool ParaStaticLayer::has_use_maximum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ParaStaticLayer::set_has_use_maximum() {
  _has_bits_[0] |= 0x00000008u;
}
void ParaStaticLayer::clear_has_use_maximum() {
  _has_bits_[0] &= ~0x00000008u;
}
void ParaStaticLayer::clear_use_maximum() {
  use_maximum_ = false;
  clear_has_use_maximum();
}
 bool ParaStaticLayer::use_maximum() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.use_maximum)
  return use_maximum_;
}
 void ParaStaticLayer::set_use_maximum(bool value) {
  set_has_use_maximum();
  use_maximum_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.use_maximum)
}

// required int32 unknown_cost_value = 5;
bool ParaStaticLayer::has_unknown_cost_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ParaStaticLayer::set_has_unknown_cost_value() {
  _has_bits_[0] |= 0x00000010u;
}
void ParaStaticLayer::clear_has_unknown_cost_value() {
  _has_bits_[0] &= ~0x00000010u;
}
void ParaStaticLayer::clear_unknown_cost_value() {
  unknown_cost_value_ = 0;
  clear_has_unknown_cost_value();
}
 ::google::protobuf::int32 ParaStaticLayer::unknown_cost_value() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.unknown_cost_value)
  return unknown_cost_value_;
}
 void ParaStaticLayer::set_unknown_cost_value(::google::protobuf::int32 value) {
  set_has_unknown_cost_value();
  unknown_cost_value_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.unknown_cost_value)
}

// required bool trinary_map = 6;
bool ParaStaticLayer::has_trinary_map() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ParaStaticLayer::set_has_trinary_map() {
  _has_bits_[0] |= 0x00000020u;
}
void ParaStaticLayer::clear_has_trinary_map() {
  _has_bits_[0] &= ~0x00000020u;
}
void ParaStaticLayer::clear_trinary_map() {
  trinary_map_ = false;
  clear_has_trinary_map();
}
 bool ParaStaticLayer::trinary_map() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.trinary_map)
  return trinary_map_;
}
 void ParaStaticLayer::set_trinary_map(bool value) {
  set_has_trinary_map();
  trinary_map_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.trinary_map)
}

// required int32 lethal_threshold = 7;
bool ParaStaticLayer::has_lethal_threshold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ParaStaticLayer::set_has_lethal_threshold() {
  _has_bits_[0] |= 0x00000040u;
}
void ParaStaticLayer::clear_has_lethal_threshold() {
  _has_bits_[0] &= ~0x00000040u;
}
void ParaStaticLayer::clear_lethal_threshold() {
  lethal_threshold_ = 0;
  clear_has_lethal_threshold();
}
 ::google::protobuf::int32 ParaStaticLayer::lethal_threshold() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.lethal_threshold)
  return lethal_threshold_;
}
 void ParaStaticLayer::set_lethal_threshold(::google::protobuf::int32 value) {
  set_has_lethal_threshold();
  lethal_threshold_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.lethal_threshold)
}

// required string topic_name = 8;
bool ParaStaticLayer::has_topic_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ParaStaticLayer::set_has_topic_name() {
  _has_bits_[0] |= 0x00000080u;
}
void ParaStaticLayer::clear_has_topic_name() {
  _has_bits_[0] &= ~0x00000080u;
}
void ParaStaticLayer::clear_topic_name() {
  topic_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_topic_name();
}
 const ::std::string& ParaStaticLayer::topic_name() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.topic_name)
  return topic_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParaStaticLayer::set_topic_name(const ::std::string& value) {
  set_has_topic_name();
  topic_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.topic_name)
}
 void ParaStaticLayer::set_topic_name(const char* value) {
  set_has_topic_name();
  topic_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roborts_costmap.ParaStaticLayer.topic_name)
}
 void ParaStaticLayer::set_topic_name(const char* value, size_t size) {
  set_has_topic_name();
  topic_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roborts_costmap.ParaStaticLayer.topic_name)
}
 ::std::string* ParaStaticLayer::mutable_topic_name() {
  set_has_topic_name();
  // @@protoc_insertion_point(field_mutable:roborts_costmap.ParaStaticLayer.topic_name)
  return topic_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ParaStaticLayer::release_topic_name() {
  // @@protoc_insertion_point(field_release:roborts_costmap.ParaStaticLayer.topic_name)
  clear_has_topic_name();
  return topic_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParaStaticLayer::set_allocated_topic_name(::std::string* topic_name) {
  if (topic_name != NULL) {
    set_has_topic_name();
  } else {
    clear_has_topic_name();
  }
  topic_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic_name);
  // @@protoc_insertion_point(field_set_allocated:roborts_costmap.ParaStaticLayer.topic_name)
}

// required bool is_raw_rosmessage = 9;
bool ParaStaticLayer::has_is_raw_rosmessage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ParaStaticLayer::set_has_is_raw_rosmessage() {
  _has_bits_[0] |= 0x00000100u;
}
void ParaStaticLayer::clear_has_is_raw_rosmessage() {
  _has_bits_[0] &= ~0x00000100u;
}
void ParaStaticLayer::clear_is_raw_rosmessage() {
  is_raw_rosmessage_ = false;
  clear_has_is_raw_rosmessage();
}
 bool ParaStaticLayer::is_raw_rosmessage() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.is_raw_rosmessage)
  return is_raw_rosmessage_;
}
 void ParaStaticLayer::set_is_raw_rosmessage(bool value) {
  set_has_is_raw_rosmessage();
  is_raw_rosmessage_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.is_raw_rosmessage)
}

// required bool is_debug = 10;
bool ParaStaticLayer::has_is_debug() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ParaStaticLayer::set_has_is_debug() {
  _has_bits_[0] |= 0x00000200u;
}
void ParaStaticLayer::clear_has_is_debug() {
  _has_bits_[0] &= ~0x00000200u;
}
void ParaStaticLayer::clear_is_debug() {
  is_debug_ = false;
  clear_has_is_debug();
}
 bool ParaStaticLayer::is_debug() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.is_debug)
  return is_debug_;
}
 void ParaStaticLayer::set_is_debug(bool value) {
  set_has_is_debug();
  is_debug_ = value;
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.is_debug)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roborts_costmap

// @@protoc_insertion_point(global_scope)
